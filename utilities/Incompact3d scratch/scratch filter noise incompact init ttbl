    
    ! For IBM
    real(mytype) :: lind 
    
    use var,         only : ta1,tb1,tc1,di1
    use var,         only : ta2,tb2,tc2,di2
    use var,         only : ta3,tb3,tc3,di3
    
    
    ! Filtered velocity fields, with pencils for trasposition for filtering
    real(mytype), dimension(xsize(1), xsize(2), xsize(3)) :: ux1f, uy1f, uz1f
    real(mytype), dimension(ysize(1), ysize(2), ysize(3)) :: ux2f, uy2f, uz2f
    real(mytype), dimension(zsize(1), zsize(2), zsize(3)) :: ux3f, uy3f, uz3f   
    
    
    ! Low-pass filtering of the white noise, x-direction
    call filx(ux1f,ta1,di1,fisx,fiffx ,fifsx ,fifwx ,xsize(1),xsize(2),xsize(3),0,ubcx) !ux1
    call filx(uy1f,tb1,di1,fisx,fiffxp,fifsxp,fifwxp,xsize(1),xsize(2),xsize(3),1,ubcy) !uy1
    call filx(uz1f,tc1,di1,fisx,fiffxp,fifsxp,fifwxp,xsize(1),xsize(2),xsize(3),1,ubcz) !uz1
    
    ! Transposition along y
    call transpose_x_to_y(ux1f,ta2)
    call transpose_x_to_y(uy1f,tb2)
    call transpose_x_to_y(uz1f,tc2)
    
    ! Filtering along y   
    call fily(ux2f,ta2,di2,fisy,fiffyp,fifsyp,fifwyp,ysize(1),ysize(2),ysize(3),1,ubcx) 
    call fily(uy2f,tb2,di2,fisy,fiffy ,fifsy ,fifwy ,ysize(1),ysize(2),ysize(3),0,ubcy) 
    call fily(uz2f,tc2,di2,fisy,fiffyp,fifsyp,fifwyp,ysize(1),ysize(2),ysize(3),1,ubcz) 
    
    ! Transposition along z
    call transpose_y_to_z(ux2f,ta3)
    call transpose_y_to_z(uy2f,tb3)
    call transpose_y_to_z(uz2f,tc3)
    
    ! Filtering along z
    call filz(ux3f,ta3,di3,fisz,fiffzp,fifszp,fifwzp,zsize(1),zsize(2),zsize(3),1,ubcx) 
    call filz(uy3f,tb3,di3,fisz,fiffzp,fifszp,fifwzp,zsize(1),zsize(2),zsize(3),1,ubcy) 
    call filz(uz3f,tc3,di3,fisz,fiffz ,fifsz ,fifwz ,zsize(1),zsize(2),zsize(3),0,ubcz) 
    
    ! Back to x pencils
    call transpose_z_to_y(ux3f,ux2f)
    call transpose_z_to_y(uy3f,uy2f)
    call transpose_z_to_y(uz3f,uz2f)
    
    call transpose_y_to_x(ux2f,ux1f)
    call transpose_y_to_x(uy2f,uy1f)
    call transpose_y_to_x(uz2f,uz1f)
